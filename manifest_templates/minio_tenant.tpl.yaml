apiVersio: "minio.min.io/v2"
kind: "Tenant"
metadata:
  name: "${name}"
  namespace: "${namespace}"

  %{ if prometheus_enabled }
  annotations:
    "prometheus.io/path": "/minio/v2/metrics/cluster"
    "prometheus.io/port": "9000"
    "prometheus.io/scrape": "true"
  %{ endif }
spec:
  image: "minio/minio:RELEASE.2021-07-30T00-02-00Z"
  imagePullPolicy: "IfNotPresent"
  credsSecret:
    name: "${creds_secret}"
  pools:
    - name: "${name}"
      ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
      ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
      ## Note that the operator does not support upgrading from standalone to distributed mode.
      servers: ${replica_count}
      ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
      volumesPerServer: ${volumes_per_server}
      ## This VolumeClaimTemplate is used across all the volumes provisioned for MinIO Tenant in this
      ## Pool.
      volumeClaimTemplate:
        metadata:
          name: "${name}-data"
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: "${volume_size}"

      ## Configure security context
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000

  mountPath: "/export"
  requestAutoCert: false
  env:
    # To turn-off browser
    - name = "MINIO_BROWSER"
      value = "off"
    - name = "MINIO_STORAGE_CLASS_STANDARD"
      value = "EC:2"