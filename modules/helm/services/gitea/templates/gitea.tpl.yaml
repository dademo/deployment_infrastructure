replicaCount: ${replica_count}

persistence:
  enabled: true
  size: "${persistence_size}"
  storageClass: "${persistence_storage_class}"

ingress:
  enabled: ${ingress_enabled}
%{ if ingress_enabled }
  hosts:
%{ for ingress_host in ingress_hosts ~}
  - "${ingress_host}"
%{ endfor ~}
%{ endif }

service:
  http:
    type: ClusterIP
    port: 3000
  ssh:
    type: ClusterIP
    port: 22

config:
  APP_NAME: "Gitea: With a cup of tea (/!\\ NOW ON K8s)."

gitea:
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 1
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 10
  database:
    builtIn:
      postgresql:
        enabled: false
      mysql:
        enabled: false
      mariadb:
        enabled: false
  config:
    database:
      DB_TYPE: postgres
      HOST: "${database_host}:5432"
      NAME: "${database_name}"
      USER: "${database_username}"
      PASSWD: "${database_password}"
  admin:
    username: "gitea"
    password: "gitea"
    email: "${admin_mail}"
  metrics:
    enabled: ${prometheus_enabled}
    serviceMonitor:
      enabled: false

statefulset:
  env:
  %{ if disable_registration && !openid_registration_only }
  - name: GITEA__service__DISABLE_REGISTRATION
    value: "true"
  %{ endif }
  %{ if openid_registration_only }
  - name: GITEA__service__ALLOW_ONLY_EXTERNAL_REGISTRATION
    value: "true"
  - name: GITEA__openid__ENABLE_OPENID_SIGNUP
    value: "true"
  %{ endif }
