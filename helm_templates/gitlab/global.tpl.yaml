postgresql:
  install: false
redis:
  install: false
prometheus:
  install: false
nginx-ingress:
  controller:
    service:
      type: "${ingress_service_type}"
      %{ if ingress_service_type == "ClusterIP" }
      externalTrafficPolicy: ""
      %{ endif }


global:
  hosts:
    domain: "${domain}"
    #hostSuffix: staging
    https: false
    #externalIP:
    gitlab:
      name: "gitlab.${domain}"
      https: false
    registry:
      name: "registry.gitlab.${domain}"
      https: false
    minio:
      name: "minio.gitlab.${domain}"
      https: false
    kas:
      name: "kas.gitlab.${domain}"
    pages:
      name: "pages.gitlab.${domain}"
      https: false
  ingress:
    enabled: true
    %{ if length(ingress_class) > 0 }
    class: "${ingress_class}"
    %{ endif }
    tls:
      enabled: false
    configureCertmanager: false
  psql:
    host: "${database_svc_name}.${namespace}.svc.cluster.local"
    port: 5432
    database: "${database_name}"
    username: "${database_user}"
    password:
      useSecret: true
      secret: "${database_password_secret_name}"
      key: "${database_password_secret_key}"
    preparedStatements: false
  redis:
    host: "${redis_svc_name}.${redis_namespace}.svc.cluster.local"
    serviceName: redis
    port: 6379
    password:
      enabled: ${redis_authentication_enabled}
      secret: "${redis_secret_name}"
      key: "${redis_secret_key}"
  grafana:
    enabled: false
  registry:
    enabled: false
  gitaly:
    internal:
      names:
        - default
  praefect:
    enabled: false
  minio:
    enabled: true

  appConfig:
    contentSecurityPolicy:
      enabled: false
      report_only: true
      enableUsagePing: true
      enableSeatLink: true
      enableImpersonation: false
      applicationSettingsCacheSeconds: 60
      defaultCanCreateGroup: true
    usernameChangingEnabled: true
    defaultTheme: 1
    defaultProjectsFeatures:
      issues: true
      mergeRequests: true
      wiki: true
      snippets: true
      builds: true
      containerRegistry: true
    object_store:
      enabled: false
      proxy_download: true
      storage_options: {}
      connection: {}
    lfs:
      enabled: true
      proxy_download: true
      bucket: git-lfs
      connection: {}
    artifacts:
      enabled: true
      proxy_download: true
      bucket: gitlab-artifacts
      connection: {}
    uploads:
      enabled: true
      proxy_download: true
      bucket: gitlab-uploads
      connection: {}
    packages:
      enabled: true
      proxy_download: true
      bucket: gitlab-packages
      connection: {}
    incomingEmail:
      enabled: false
    serviceDeskEmail:
      enabled: false
    sentry:
      enabled: false
    smartcard:
      enabled: false
    ldap:
      preventSignin: true
    omniauth:
      enabled: true
      autoSignInWithProvider: true
      syncProfileFromProvider: ['saml']
      syncProfileAttributes: ['email']
      allowSingleSignOn: ['saml']
      autoLinkSamlUser: true
      autoLinkUser: ['saml']
      providers: %{ if length(providers) == 0} [] %{ else }
      %{ for provider in providers ~}
      - name: "${provider}"
        key: provider
      %{ endfor ~}
      %{ endif }
  rails:
    bootsnap:
      enabled: true
  bootsnap:
    enabled: true
  pages:
    enabled: false
  workhorse:
    serviceName: webservice-default
    host: "workhorse.gitlab.${domain}"
  webservice:
    workerTimeout: 60
  application:
    create: false
  serviceAccount:
    enabled: false
    create: false
